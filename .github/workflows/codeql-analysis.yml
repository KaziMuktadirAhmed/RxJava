name: "CodeQL"

on:
  push:
    branches: ["4.1", main]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: ["4.1", main]
  schedule:
    - cron: '0 13 * * 3'
  workflow_dispatch:

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryhandler.count=5 -Dmaven.wagon.httpconnectionManager.ttlSeconds=240

permissions:
  contents: read

jobs:
  analyze:
    permissions:
      actions: read  # for github/codeql-action/init to get workflow details
      contents: read  # for actions/checkout to fetch code
      security-events: write  # for github/codeql-action/analyze to upload SARIF results
    name: Analyze
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # Override automatic language detection by changing the below list
        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
        language: ['java']
        # Learn more...
        # https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#overriding-automatic-language-detection

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      
    - name: Upload CodeQL Analysis Results
      uses: actions/upload-artifact@v2
      with:
        name: codeql-results
        path: /home/runner/work/RxJava/results/

    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: codeql-results # Specify the name of the artifact you want to download
        path: /home/runner/work/RxJava/results/ # Specify the directory where you want to save the downloaded artifact

    - name: Print Run ID
      run: echo "workflow run id ${{github.run_id}}"
